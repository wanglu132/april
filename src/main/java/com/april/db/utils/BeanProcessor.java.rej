***************
*** 225,230 ****
              // Don't call setter if the value object isn't the right type 
              if (this.isCompatibleType(value, params[0])) {
                  setter.invoke(target, new Object[] { value });
              }
  
          } catch (IllegalArgumentException e) {
--- 225,239 ----
              // Don't call setter if the value object isn't the right type 
              if (this.isCompatibleType(value, params[0])) {
                  setter.invoke(target, new Object[] { value });
+             } else if(params[0].getName().equals("java.sql.Date")) {
+                 value = (value == null) 
+                   ? null 
+                   : new java.sql.Date(((java.util.Date) value).getTime());
+                 
+                 setter.invoke(target, new Object[] {value});
+             } else {
+               throw new SQLException(
+                   "Cannot set " + prop.getName() + ": incompatible types.");
              }
  
          } catch (IllegalArgumentException e) {
